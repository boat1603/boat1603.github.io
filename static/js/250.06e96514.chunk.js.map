{"version":3,"file":"static/js/250.06e96514.chunk.js","mappings":"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","sources":["ui-component/cards/SubCard.js","pages/SettingPage.js"],"sourcesContent":["import { useSelector } from \"react-redux\";\r\n// material-ui\r\nimport Divider from \"@mui/material/Divider\";\r\nexport default function SubCard(props) {\r\n  const { title, content } = props;\r\n  const customization = useSelector((state) => state.customization);\r\n\r\n  return (\r\n    <div\r\n      className=\"sub-card\"\r\n      style={{\r\n        borderRadius: customization.borderRadius,\r\n      }}\r\n    >\r\n      {title && (\r\n        <div style={{ paddingBottom: \"10px\" }}>\r\n          {title}\r\n          <Divider />\r\n        </div>\r\n      )}\r\n      {content && <div>{content}</div>}\r\n    </div>\r\n  );\r\n}\r\n","import { useState, useEffect } from \"react\";\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\n\r\n// material-ui\r\nimport { Button, Grid, IconButton, Slider, Typography } from \"@mui/material\";\r\n\r\n// project imports\r\nimport SubCard from \"../ui-component/cards/SubCard\";\r\nimport { SET_BORDER_RADIUS, SET_THEME, SET_BG } from \"./../store/actions\";\r\nimport { gridSpacing } from \"../store/constant\";\r\n\r\nimport config from \"./../config\";\r\nimport DarkModeIcon from \"@mui/icons-material/DarkMode\";\r\nimport Brightness7Icon from \"@mui/icons-material/Brightness7\";\r\n\r\n// concat 'px'\r\nfunction valueText(value) {\r\n  return `${value}px`;\r\n}\r\n\r\n// ==============================|| LIVE CUSTOMIZATION ||============================== //\r\n\r\nexport default function SettingPage(props) {\r\n  const dispatch = useDispatch();\r\n  const customization = useSelector((state) => state.customization);\r\n\r\n  // state - border radius\r\n  const [borderRadius, setBorderRadius] = useState(customization.borderRadius);\r\n  const handleBorderRadius = (event, newValue) => {\r\n    setBorderRadius(newValue);\r\n    localStorage.setItem(\"borderRadius\", newValue);\r\n  };\r\n\r\n  useEffect(() => {\r\n    dispatch({ type: SET_BORDER_RADIUS, borderRadius });\r\n    localStorage.setItem(\"borderRadius\", borderRadius);\r\n  }, [dispatch, borderRadius]);\r\n\r\n  // state - webtheme\r\n  const [webTheme, setWebTheme] = useState(customization.mode);\r\n\r\n  useEffect(() => {\r\n    let newTheme = webTheme;\r\n    dispatch({ type: SET_THEME, mode: newTheme });\r\n    localStorage.setItem(\"theme\", newTheme);\r\n    document.documentElement.setAttribute(\"data-theme\", newTheme);\r\n  }, [dispatch, webTheme]);\r\n\r\n  // state - bg\r\n  const [bg, setBg] = useState(customization.bg);\r\n\r\n  useEffect(() => {\r\n    let newBG = bg;\r\n    dispatch({ type: SET_BG, bg: newBG });\r\n    localStorage.setItem(\"background\", newBG);\r\n  }, [dispatch, bg]);\r\n\r\n  const reset_default_setting = () => {\r\n    setBorderRadius(config.borderRadius);\r\n    localStorage.setItem(\"borderRadius\", config.borderRadius);\r\n\r\n    setWebTheme(config.mode);\r\n    localStorage.setItem(\"theme\", config.mode);\r\n    document.documentElement.setAttribute(\"data-theme\", config.mode);\r\n\r\n    setBg(config.bgColor);\r\n    localStorage.setItem(\"background\", config.bgColor);\r\n  };\r\n  return (\r\n    <div>\r\n      <Grid container spacing={gridSpacing} sx={{ p: 3 }}>\r\n        <Grid container spacing={2} xs={12}>\r\n          <Grid item xs={12} md={6}>\r\n            <SubCard\r\n              title={\r\n                <div\r\n                  style={{\r\n                    display: \"flex\",\r\n                    alignItems: \"center\",\r\n                    justifyContent: \"space-between\",\r\n                    height: \"50px\",\r\n                  }}\r\n                >\r\n                  <Typography gutterBottom variant=\"h4\" component=\"div\">\r\n                    Theme\r\n                  </Typography>\r\n                  <IconButton\r\n                    onClick={() => {\r\n                      if (webTheme === \"dark\") {\r\n                        setWebTheme(\"light\");\r\n                        localStorage.setItem(\"theme\", \"light\");\r\n                        document.documentElement.setAttribute(\r\n                          \"data-theme\",\r\n                          \"light\"\r\n                        );\r\n                      } else {\r\n                        setWebTheme(\"dark\");\r\n                        localStorage.setItem(\"theme\", \"dark\");\r\n                        document.documentElement.setAttribute(\r\n                          \"data-theme\",\r\n                          \"dark\"\r\n                        );\r\n                      }\r\n                    }}\r\n                  >\r\n                    {webTheme !== \"dark\" ? (\r\n                      <DarkModeIcon />\r\n                    ) : (\r\n                      <Brightness7Icon />\r\n                    )}\r\n                  </IconButton>\r\n                </div>\r\n              }\r\n              content={\r\n                <Grid\r\n                  container\r\n                  spacing={1}\r\n                  alignItems=\"center\"\r\n                  justifyContent=\"center\"\r\n                >\r\n                  {config.bgList.map((v, i) => {\r\n                    return (\r\n                      <div\r\n                        className=\"base-example-bg\"\r\n                        onClick={() => {\r\n                          setBg(v);\r\n                          localStorage.setItem(\"background\", v);\r\n                        }}\r\n                        style={\r\n                          customization.bg === v\r\n                            ? {\r\n                                borderColor:\r\n                                  customization.mode === \"dark\"\r\n                                    ? \"#42a5f5\"\r\n                                    : \"#90caf9\",\r\n                                borderStyle: \"solid\",\r\n                              }\r\n                            : null\r\n                        }\r\n                      >\r\n                        <div\r\n                          className=\"overlay-bg\"\r\n                          style={{\r\n                            background: config.bgMap(customization.mode, v),\r\n                          }}\r\n                        ></div>\r\n                      </div>\r\n                    );\r\n                  })}\r\n                </Grid>\r\n              }\r\n            />\r\n          </Grid>\r\n          <Grid item xs={12} md={6}>\r\n            <SubCard\r\n              title={\r\n                <div\r\n                  style={{\r\n                    display: \"flex\",\r\n                    alignItems: \"center\",\r\n                    justifyContent: \"space-between\",\r\n                    height: \"50px\",\r\n                  }}\r\n                >\r\n                  <Typography gutterBottom variant=\"h4\" component=\"div\">\r\n                    Card Border Radius\r\n                  </Typography>\r\n                </div>\r\n              }\r\n              content={\r\n                <Grid\r\n                  item\r\n                  xs={12}\r\n                  container\r\n                  spacing={2}\r\n                  alignItems=\"center\"\r\n                  sx={{ mt: 2.5 }}\r\n                >\r\n                  <Grid item>\r\n                    <Typography variant=\"h6\" color=\"text.secondary\">\r\n                      10px\r\n                    </Typography>\r\n                  </Grid>\r\n                  <Grid item xs>\r\n                    <Slider\r\n                      size=\"small\"\r\n                      value={borderRadius}\r\n                      onChange={handleBorderRadius}\r\n                      getAriaValueText={valueText}\r\n                      valueLabelDisplay=\"on\"\r\n                      aria-labelledby=\"discrete-slider-small-steps\"\r\n                      marks\r\n                      step={1}\r\n                      min={10}\r\n                      max={24}\r\n                    />\r\n                  </Grid>\r\n                  <Grid item>\r\n                    <Typography variant=\"h6\" color=\"text.secondary\">\r\n                      24px\r\n                    </Typography>\r\n                  </Grid>\r\n                </Grid>\r\n              }\r\n            />\r\n          </Grid>\r\n        </Grid>\r\n\r\n        <Grid item xs={12}>\r\n          <Button onClick={reset_default_setting}>RESET</Button>\r\n        </Grid>\r\n      </Grid>\r\n    </div>\r\n  );\r\n}\r\n"],"names":["SubCard","props","title","content","customization","useSelector","state","className","style","borderRadius","paddingBottom","Divider","valueText","value","SettingPage","dispatch","useDispatch","useState","setBorderRadius","useEffect","type","SET_BORDER_RADIUS","localStorage","setItem","mode","webTheme","setWebTheme","newTheme","SET_THEME","document","documentElement","setAttribute","bg","setBg","newBG","SET_BG","Grid","container","spacing","gridSpacing","sx","p","xs","item","md","display","alignItems","justifyContent","height","Typography","gutterBottom","variant","component","IconButton","onClick","DarkMode","Brightness7","config","v","i","borderColor","borderStyle","background","mt","color","Slider","size","onChange","event","newValue","getAriaValueText","valueLabelDisplay","marks","step","min","max","Button"],"sourceRoot":""}